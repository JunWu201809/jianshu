{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\study\\\\techStudy\\\\reactjs\\\\jianshu\\\\src\\\\common\\\\header\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { HeaderWrapper, Logo, Nav, NavItem, NavSearch, Addition, Button, SearchWrap, SearchInfo, SearchInfoSwich, SearchInfoTitle, SearchInfoItem, SearchInfoList } from './style.js';\nimport { CSSTransition } from 'react-transition-group';\nimport * as actionCreators from './store/actionCreator';\n\nclass Header extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(HeaderWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        href: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        children: [/*#__PURE__*/_jsxDEV(NavItem, {\n          className: \"left active\",\n          children: \"Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n          className: \"left\",\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n          className: \"right\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"iconfont\",\n            children: \"\\uE602\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n          className: \"right\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchWrap, {\n          children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n            in: this.props.focused,\n            timeout: 200,\n            classNames: \"slide\",\n            children: /*#__PURE__*/_jsxDEV(NavSearch, {\n              className: this.props.focused ? 'focused' : ' ',\n              onFocus: this.props.handleInputFocus,\n              onBlur: this.props.handleInputBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: this.props.focused ? 'focused iconfont' : ' iconfont',\n            children: \"\\uE66B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), this.getListArea(this.props.focused)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Addition, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"reg\",\n          children: \"Reigster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"write\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"iconfont\",\n            children: \"\\uE63D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), \"Write\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n  getListArea(show) {\n    const {\n      focused,\n      list\n    } = this.props;\n\n    if (focused) {\n      return /*#__PURE__*/_jsxDEV(SearchInfo, {\n        children: [/*#__PURE__*/_jsxDEV(SearchInfoTitle, {\n          children: [\"Hot Search!\", /*#__PURE__*/_jsxDEV(SearchInfoSwich, {\n            children: \"Switch!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchInfoList, {\n          children: list.map(item => {\n            return /*#__PURE__*/_jsxDEV(SearchInfoItem, {\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    focused: state.get('header').get('focused'),\n    list: state.getIn(['header', 'list'])\n  };\n};\n\nconst mapDispathToProps = dispatch => {\n  return {\n    handleInputFocus() {\n      dispatch(actionCreators.getList());\n      dispatch(actionCreators.searchFocus());\n    },\n\n    handleInputBlur() {\n      dispatch(actionCreators.searchBlur());\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispathToProps)(Header);","map":{"version":3,"sources":["D:/study/techStudy/reactjs/jianshu/src/common/header/index.js"],"names":["React","Component","connect","HeaderWrapper","Logo","Nav","NavItem","NavSearch","Addition","Button","SearchWrap","SearchInfo","SearchInfoSwich","SearchInfoTitle","SearchInfoItem","SearchInfoList","CSSTransition","actionCreators","Header","render","props","focused","handleInputFocus","handleInputBlur","getListArea","show","list","map","item","mapStateToProps","state","get","getIn","mapDispathToProps","dispatch","getList","searchFocus","searchBlur"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    HeaderWrapper, Logo, Nav, NavItem, NavSearch, Addition, Button, SearchWrap,\r\n    SearchInfo, SearchInfoSwich, SearchInfoTitle, SearchInfoItem, SearchInfoList\r\n} from './style.js';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport * as actionCreators from './store/actionCreator';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <HeaderWrapper>\r\n                <Logo href='/' />\r\n                <Nav>\r\n                    <NavItem className='left active'>Index</NavItem>\r\n                    <NavItem className='left'>Download</NavItem>\r\n                    <NavItem className='right'>\r\n                        <i className=\"iconfont\">&#xe602;</i>\r\n                    </NavItem>\r\n                    <NavItem className='right'>Login</NavItem>\r\n                    <SearchWrap>\r\n                        <CSSTransition in={this.props.focused} timeout={200} classNames=\"slide\">\r\n                            <NavSearch className={this.props.focused ? 'focused' : ' '}\r\n                                onFocus={this.props.handleInputFocus} onBlur={this.props.handleInputBlur}></NavSearch>\r\n                        </CSSTransition>\r\n                        <i className={this.props.focused ? 'focused iconfont' : ' iconfont'}>&#xe66b;</i>\r\n                        {this.getListArea(this.props.focused)}\r\n                    </SearchWrap>\r\n                </Nav>\r\n                <Addition>\r\n                    <Button className='reg'>Reigster</Button>\r\n                    <Button className='write'>\r\n                        <i className=\"iconfont\">&#xe63d;</i>\r\n                    Write\r\n                </Button>\r\n                </Addition>\r\n            </HeaderWrapper>\r\n        );\r\n    }\r\n\r\n    getListArea(show) {\r\n        const {focused, list} = this.props;\r\n\r\n        if (focused) {\r\n            return (\r\n                <SearchInfo>\r\n                    <SearchInfoTitle>\r\n                        Hot Search!\r\n                    <SearchInfoSwich>\r\n                            Switch!\r\n                    </SearchInfoSwich>\r\n                    </SearchInfoTitle>\r\n                    <SearchInfoList>\r\n                        {\r\n                            list.map( (item) => {\r\n                            return <SearchInfoItem key={item}>{item}</SearchInfoItem>\r\n                            })\r\n                        }\r\n                    </SearchInfoList>\r\n                </SearchInfo>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        focused: state.get('header').get('focused'),\r\n        list: state.getIn(['header', 'list'])\r\n    }\r\n}\r\n\r\nconst mapDispathToProps = (dispatch) => {\r\n    return {\r\n        handleInputFocus() {\r\n            dispatch(actionCreators.getList());\r\n            dispatch(actionCreators.searchFocus());\r\n        },\r\n        handleInputBlur() {\r\n            dispatch(actionCreators.searchBlur());\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispathToProps)(Header);"]},"metadata":{},"sourceType":"module"}